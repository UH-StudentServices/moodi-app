/*
 * This file is part of Moodi application.
 *
 * Moodi application is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Moodi application is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Moodi application.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "org.springframework.boot" version "2.6.6"
    id "net.researchgate.release" version "2.8.1"
    id "java"
    id 'checkstyle'
    id 'org.sonarqube' version '3.3'
}

java {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

apply plugin: "io.spring.dependency-management"
apply from: "gradle-build/required-properties.gradle"
apply plugin: 'checkstyle'

// disable plain jar which seems to make publishing to artifactory fail
jar {
    enabled = false
}

bootJar {
    mainClass = "fi.helsinki.moodi.Application"
    launchScript()
}

springBoot {
    mainClass = "fi.helsinki.moodi.Application"
}

wrapper {
    gradleVersion = '7.4'
}

checkstyle {
    toolVersion = '8.29'
    configDirectory = rootProject.file('gradle-build/checkstyle')
    configProperties 'checkstyle.header.file': file('gradle-build/checkstyle/required-header.txt');
}

if(hasProperty("opintoni_artifactory_base_url")) {
    repositories {
        maven {
            url "${opintoni_artifactory_base_url}/remote-repos/"
            allowInsecureProtocol(true)
        }
        mavenLocal()
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }
} else {
    repositories {
        mavenLocal()
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-undertow'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: logback_version
    implementation group: 'ch.qos.logback', name: 'logback-core', version: logback_version
    implementation group: 'org.springframework', name: 'spring-context-support'
    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernate_entitymanager_version
    implementation group: 'org.hibernate', name: 'hibernate-ehcache', version: hibernate_entitymanager_version

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.guava:guava:23.0'
    implementation 'com.h2database:h2:1.4.187'
    implementation 'org.flywaydb:flyway-core:6.5.7'
    implementation "org.postgresql:postgresql:9.4-1201-jdbc41"
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.trimou:trimou-core:2.5.1.Final'
    implementation "javax.mail:mail:1.4.7"
    implementation "javax.validation:validation-api:2.0.1.Final"

    implementation group: 'com.github.americanexpress.nodes', name: 'nodes', version: nodes_version

    testImplementation 'com.h2database:h2:2.1.212'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'com.jayway.jsonpath:json-path-assert:2.7.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation group: 'org.mock-server', name: 'mockserver-netty', version: mockserver_version
    testImplementation group: 'org.mock-server', name: 'mockserver-junit-rule', version: mockserver_version
    testImplementation group: 'com.graphql-java', name: 'graphql-java', version: graphql_java_version
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}

apply from: "gradle-build/test.gradle"
apply from: "gradle-build/itest.gradle"
apply from: "gradle-build/publishing.gradle"
apply from: "gradle-build/deploy.gradle"
apply from: "gradle-build/release.gradle"

task checkstyle {
    dependsOn checkstyleMain
    dependsOn checkstyleTest
    dependsOn checkstyleItest
}

sonarqube {
    properties {
        property "sonar.projectKey", "moodi-app"
        property "sonar.projectName", "moodi-app"
    }
}
